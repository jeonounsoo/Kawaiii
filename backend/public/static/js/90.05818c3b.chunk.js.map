{"version":3,"file":"static/js/90.05818c3b.chunk.js","mappings":"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","sources":["places/pages/NewPlaces.js","shared/components/FormElements/ImageUpload.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport \"./PlaceForm.css\"\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validator\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/EroorModal\";\r\nimport LoadingSpinner from \"../../shared/components/LoadingSpinner\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      address: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const placeSubmitHandler = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('title', formState.inputs.title.value);\r\n      formData.append('description', formState.inputs.description.value);\r\n      formData.append('address', formState.inputs.address.value);\r\n      formData.append('image', formState.inputs.image.value);\r\n      await sendRequest(process.env.REACT_APP_BACKEND_URL + '/places', 'POST', formData, {\r\n        Authorization: 'Bearer ' + auth.token\r\n      });\r\n      history.push('/');\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters).\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide an image.\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPlace;","import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport Button from './Button';\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = props => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg,.gif\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n"],"names":["auth","useContext","AuthContext","_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","_useForm","useForm","title","value","isValid","description","address","image","_useForm2","_slicedToArray","formState","inputHandler","history","useHistory","placeSubmitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","formData","wrap","_context","prev","next","preventDefault","FormData","append","inputs","process","Authorization","token","push","t0","stop","_x","apply","arguments","_jsxs","React","children","_jsx","ErrorModal","onClear","className","onSubmit","LoadingSpinner","asOverlay","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","ImageUpload","Button","disabled","props","_useState","useState","_useState2","file","setFile","_useState3","_useState4","previewUrl","setPreviewUrl","_useState5","_useState6","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsValid","target","files","length","concat","center","src","alt","onClick","current","click"],"sourceRoot":""}